/* ---------------------------------------------------- */
/*  Generated by Enterprise Architect Version 15.2 		*/
/*  Created On : 01-oct.-2021 12:46:32 a. m. 				*/
/*  DBMS       : Oracle 						*/
/* ---------------------------------------------------- */

/* Drop Triggers, Sequences for Autonumber Columns */

DECLARE 
  C NUMBER; 
BEGIN 
SELECT COUNT(*) INTO C 
FROM USER_TRIGGERS 
  WHERE TRIGGER_NAME = 'TRG_PEDIDO_K_PEDIDO'; 
  IF (C > 0) THEN 
    EXECUTE IMMEDIATE 'DROP TRIGGER TRG_PEDIDO_K_PEDIDO'; 
END IF; 
END;
/

DECLARE 
  C NUMBER; 
BEGIN 
SELECT COUNT(*) INTO C 
FROM USER_SEQUENCES 
  WHERE SEQUENCE_NAME = 'SEQ_PEDIDO_K_PEDIDO'; 
  IF (C > 0) THEN 
    EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_PEDIDO_K_PEDIDO'; 
END IF; 
END;
/


/* Drop Tables */
begin
	EXECUTE IMMEDIATE 'DROP TABLE METODO_DE_PAGO CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/
begin
	EXECUTE IMMEDIATE 'DROP TABLE CATEGORIA_REPRESENTANTE CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE   Calificacion_pedido CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE   CATEGORIA CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE   CATEGORIA_REP CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE   CATEGORIA_REP_PERIODO CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE   CLIENTE CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE   INVENTARIO CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE   ITEM CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE   PAGO_PEDIDO CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE   PAIS CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE   PEDIDO CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE   PRODUCTO CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE   REGION CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE   REPRESENTANTE CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE   REPRESENTANTE_CLIENTE CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE   TIPO_DE_PAGO CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE   USUARIO CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

/* Create Tables */

CREATE TABLE  Calificacion_pedido
(
	K_PEDIDO NUMBER(10) NOT NULL,	-- código del pedido al que se va a calificar
	K_CALIFICACION NUMBER(2) NOT NULL,	-- código de la calificación a un pedido dado
	Q_CALIFICACION NUMBER(2,1) NOT NULL,	-- Calificación que se le da al pedido
	N_COMENTARIOS VARCHAR(200) NULL	-- Comentarios sobre el pedido y el manejo que tuvo el representante para el mismo
)
;

CREATE TABLE  CATEGORIA
(
	K_CATEGORIA NUMBER(10) NOT NULL,	-- codigo de la categoría 
	N_NOMCATEGORIA VARCHAR2(50) NOT NULL,	-- nombre de la categoría
	K_CATEGORIA_PERTENECE NUMBER(10) NULL	-- codigo de la categoría a la que pertenece
)
;

CREATE TABLE  CATEGORIA_REP
(
	K_CATEGORIA NUMBER(3) NOT NULL,	-- codigo de la categoría del representante
	N_NOMCAT VARCHAR(50) NOT NULL,	-- nombre de la categoría (beginner, junior, senior, master)
	N_DESCATEGORIA VARCHAR(50) NOT NULL,	-- descripción de la categoría
	Q_CALIFICACION_MIN NUMBER(2,1) NOT NULL,	-- calificación mínima para pertenecer a la categoría
	Q_VENTAS_MIN NUMBER(10) NOT NULL,	-- Ventas mínimas para pertenecer a esta categoría
	V_COMISION NUMBER(4,2) NOT NULL	-- valor de la comisión para la categoría en cuestión
)
;

CREATE TABLE  CATEGORIA_REP_PERIODO
(
	K_CATEGORIA_REP NUMBER(10) NOT NULL,	-- codigo interno de la correspondencia entre categoría y representante
	K_CATEGORIA NUMBER(3) NOT NULL,	-- codigo de la categoría a la cual pertenece el representante
	K_TIPOID_REP VARCHAR(2) NOT NULL,	-- Tipo de identificacion del representante (CC,CE,PA,NI,OT)
	K_IDENTIFICACION_REP NUMBER(10) NOT NULL,	-- identificación del representante
	D_INICIO DATE NOT NULL,	-- fecha cuando se le asigna la categoría a un representante
	D_TERMINACION DATE NULL,	-- fecha cuando se le termina la categoría a un representante
	Q_PROM_CALIFICACION NUMBER(2,1) NULL,	-- Calificación promedio del representante
	Q_VENTAS NUMBER(10) NULL,	-- numero de ventas acumuladas por el representante
	V_COMISION_TOTAL NUMBER(11,2) NULL	-- Valor de la comisión total teniendo en cuenta la categoría de un representante en un determinado periodo de tiempo
)
;

CREATE TABLE  CLIENTE
(
	K_TIPOID VARCHAR(2) NOT NULL,	-- Tipo de identificacion (CC,CE,PA,NI,OT)
	K_IDENTIFICACION NUMBER(10) NOT NULL,	-- Identificación del cliente
	N_CIUDAD VARCHAR(50) NOT NULL	-- Ciudad del cliente
)
;

CREATE TABLE  INVENTARIO
(
	K_PAIS NUMBER(3) NOT NULL,	-- codigo del pais
	K_REGION NUMBER(2) NOT NULL,	-- codigo de la región
	K_PRODUCTO NUMBER(10) NOT NULL,	-- código del producto
	Q_ENEXISTENCIA NUMBER(10) NOT NULL,	-- número de productos en existencia
	V_PRECIO_UNIDAD NUMBER(11,2) NOT NULL	-- valor del producto para su respectivo país-región
)
;

CREATE TABLE  ITEM
(
	K_PEDIDO NUMBER(10) NOT NULL,	-- codigo de la orden
	K_ITEM NUMBER(8) NOT NULL,	-- consecutivo para cada item
	Q_CANTIDAD NUMBER(8) NOT NULL,	-- cantidad del item solicitado
	V_PRECIO NUMBER(11,2) NOT NULL,	-- precio calculado según la cantidad del item
	K_PAIS NUMBER(3) NOT NULL,	-- codigo del pais
	K_REGION NUMBER(2) NOT NULL,	-- codigo de la region
	K_PRODUCTO NUMBER(10) NOT NULL	-- codigo del producto
)
;

CREATE TABLE  PAGO_PEDIDO
(
	K_PEDIDO NUMBER(10) NOT NULL,	-- llave primaria del pago del pedido
	K_PAGO_PEDIDO NUMBER(2) NOT NULL,	-- hace parte de la clave primaria, es el numero de pago que se realiza para cierto pedido
	K_TIPOPAGO NUMBER(2) NOT NULL,	-- codigo del tipo de pago
	F_PAGO DATE NOT NULL,	-- fecha en la que se realiza el pago
	V_PAGO NUMBER(11,2) NOT NULL,	-- valor del pago total
	I_ESTADO VARCHAR(3) NOT NULL,	-- estado del pago: autorizado (AUT) ,cancelado (CAN), fallado (FAI), rechazado (REJ), enviado (ENV)
	N_OBSERVACION VARCHAR(100) NULL
)
;

CREATE TABLE  PAIS
(
	K_PAIS NUMBER(3) NOT NULL,	-- llave primaria del país, se refiere al código numérico del país
	N_NOMBRE_PAIS VARCHAR(50) NOT NULL	-- Nombre del país que se referencia
)
;

CREATE TABLE  PEDIDO
(
	K_PEDIDO NUMBER(10) NOT NULL,	-- identificador del pedido
	F_PEDIDO DATE NOT NULL,	-- fecha de la realización del pedido
	F_LLEGADA DATE NULL,	-- fecha de la llegada del pedido
	I_ESTADO VARCHAR(3) NOT NULL,	-- estado del pedido, el cual puede ser: generado(GEN), pagado(PAG), entregado(ENT), cancelado(CAN), devuelto(DEV)
	Q_VALORT NUMBER(11,2) NOT NULL,	-- valor total del pedido
	K_TIPOID VARCHAR(2) NOT NULL,
	K_IDENTIFICACION NUMBER(10) NOT NULL
)
;

CREATE TABLE  PRODUCTO
(
	K_PRODUCTO NUMBER(10) NOT NULL,	-- Codigo del producto
	N_NOMPRODUCTO VARCHAR2(50) NOT NULL,	-- nombre del producto
	N_DESCPRODUCTO VARCHAR2(50) NOT NULL,	-- descripción del producto
	K_CATEGORIA NUMBER(10) NULL
)
;

CREATE TABLE  REGION
(
	K_PAIS NUMBER(3) NOT NULL,	-- Código del país que hace hace parte de la Llave primaria de la región.
	K_REGION NUMBER(2) NOT NULL,	-- código de la region, hace parte de la llave primaria compuesta
	N_NOMBRE_REGION VARCHAR2(50) NOT NULL,	-- Nombre de la región en cuestión
	K_TIPOID_DIRECTOR VARCHAR(2) NULL,	-- El tipo de Identificación de la persona que está a cargo de la región (hace parte de la llave foránea del Representante)
	K_IDENTIFICACION_DIRECTOR NUMBER(9) NULL	-- Identificación de la persona que está a cargo de la región (hace parte de la llave foránea del Representante)
)
;

CREATE TABLE  REPRESENTANTE
(
	K_TIPOID VARCHAR(2) NOT NULL,	-- El tipo de Identificación del representante (hace parte de la llave primaria compuesta del Representante)
	K_IDENTIFICACION NUMBER(10) NOT NULL,	-- Identificación del representante (hace parte de la llave primaria compuesta del Representante)
	I_GENERO VARCHAR(2) NOT NULL,	-- Genero del representante dado por 2 letras, M, F o NA
	F_NACIMIENTO DATE NOT NULL,	-- Fecha de nacimiento del Representante
	F_CONTRATO DATE NOT NULL,	-- Fecha de la firma del contrato del Representante
	K_PAIS NUMBER(3) NOT NULL,	-- Código del país en la que el representante ejerce su función, hace parte de la Llave primaria de la región.
	K_REGION NUMBER(2) NOT NULL,	-- Código de la región en la que el representante ejerce su función
	Q_CALIFICACION NUMBER(2,1) NULL,	-- Calificación del representante
	I_ESTADO VARCHAR(3) NOT NULL,	-- estado del representante, puede ser: Activo(A), Inactivo(I), Suspendido(S).
	K_TIPOID_SUP VARCHAR(2) NULL,
	K_IDENTIFICACION_SUP NUMBER(10) NULL
)
;

CREATE TABLE  REPRESENTANTE_CLIENTE
(
	K_CLIENTEREP NUMBER(10) NOT NULL,	-- Codigo interno de la correspondencia entre cliente y representante
	F_INICIO_REP DATE NOT NULL,	-- fecha en la que se agrega el representante a un cliente
	F_FIN_REP DATE NULL,	-- fecha en la que se deja de ser representante de un cliente
	K_TIPOID_CLI VARCHAR(2) NOT NULL,	-- Tipo de identificacion del cliente (CC,CE,PA,NI,OT)
	K_IDENTIFICACION_CLI NUMBER(10) NOT NULL,	-- identificación del cliente
	K_TIPOID_REP VARCHAR(2) NOT NULL,	-- Tipo de identificacion del representante(CC,CE,PA,NI,OT)
	K_IDENTIFICACION_REP NUMBER(10) NOT NULL	-- identificacion del representante
)
;

CREATE TABLE  TIPO_DE_PAGO
(
	K_TIPOPAGO NUMBER(2) NOT NULL,	-- Consecutivo de cada tipo de pago
	N_DESCRIPCION VARCHAR(50) NOT NULL	-- descirpción del tipo de pago
)
;

CREATE TABLE  USUARIO
(
	K_TIPOID VARCHAR(2) NOT NULL,	-- Tipo de identificacion (CC,CE,PA,NI,OT)
	K_IDENTIFICACION NUMBER(10) NOT NULL,	-- Numero de identificacion del cliente
	N_NOMBRE VARCHAR2(50) NOT NULL,	-- Nombres del cliente
	N_APELLIDO VARCHAR2(50) NOT NULL,	-- Apellidos del clente
	N_CORREOE VARCHAR2(50) NOT NULL,	-- Correo electrónico del cliente
	N_DIRECCION VARCHAR2(50) NOT NULL,	-- Direccion del cliente
	Q_TELEFONO NUMBER(10) NOT NULL,	-- Telefono de contacto del cliente
	N_USUARIO VARCHAR(20) NOT NULL	-- usuario con el que ingresa el cliente a la aplicación
)
;

/* Create Comments, Sequences and Triggers for Autonumber Columns */

COMMENT ON TABLE  Calificacion_pedido IS 'En esta tabla se guardan las calificaciones para un pedido dado'
;


COMMENT ON COLUMN  Calificacion_pedido.K_PEDIDO IS 'código del pedido al que se va a calificar';

COMMENT ON COLUMN  Calificacion_pedido.K_CALIFICACION IS 'código de la calificación a un pedido dado';

COMMENT ON COLUMN  Calificacion_pedido.Q_CALIFICACION IS 'Calificación que se le da al pedido';

COMMENT ON COLUMN  Calificacion_pedido.N_COMENTARIOS IS 'Comentarios sobre el pedido y el manejo que tuvo el representante para el mismo';

COMMENT ON COLUMN  CATEGORIA.K_CATEGORIA IS 'codigo de la categoría ';

COMMENT ON COLUMN  CATEGORIA.N_NOMCATEGORIA IS 'nombre de la categoría';

COMMENT ON COLUMN  CATEGORIA.K_CATEGORIA_PERTENECE IS 'codigo de la categoría a la que pertenece';

COMMENT ON TABLE  CATEGORIA_REP IS 'Almacenará las posibles categorías de un representante'
;


COMMENT ON COLUMN  CATEGORIA_REP.K_CATEGORIA IS 'codigo de la categoría del representante';

COMMENT ON COLUMN  CATEGORIA_REP.N_NOMCAT IS 'nombre de la categoría (beginner, junior, senior, master)';

COMMENT ON COLUMN  CATEGORIA_REP.N_DESCATEGORIA IS 'descripción de la categoría';

COMMENT ON COLUMN  CATEGORIA_REP.Q_CALIFICACION_MIN IS 'calificación mínima para pertenecer a la categoría';

COMMENT ON COLUMN  CATEGORIA_REP.Q_VENTAS_MIN IS 'Ventas mínimas para pertenecer a esta categoría';

COMMENT ON COLUMN  CATEGORIA_REP.V_COMISION IS 'valor de la comisión para la categoría en cuestión';

COMMENT ON TABLE  CATEGORIA_REP_PERIODO IS 'se almacerará la categoría para un representante'
;


COMMENT ON COLUMN  CATEGORIA_REP_PERIODO.K_CATEGORIA_REP IS 'codigo interno de la correspondencia entre categoría y representante';

COMMENT ON COLUMN  CATEGORIA_REP_PERIODO.K_CATEGORIA IS 'codigo de la categoría a la cual pertenece el representante';

COMMENT ON COLUMN  CATEGORIA_REP_PERIODO.K_TIPOID_REP IS 'Tipo de identificacion del representante (CC,CE,PA,NI,OT)';

COMMENT ON COLUMN  CATEGORIA_REP_PERIODO.K_IDENTIFICACION_REP IS 'identificación del representante';

COMMENT ON COLUMN  CATEGORIA_REP_PERIODO.D_INICIO IS 'fecha cuando se le asigna la categoría a un representante';

COMMENT ON COLUMN  CATEGORIA_REP_PERIODO.D_TERMINACION IS 'fecha cuando se le termina la categoría a un representante';

COMMENT ON COLUMN  CATEGORIA_REP_PERIODO.Q_PROM_CALIFICACION IS 'Calificación promedio del representante';

COMMENT ON COLUMN  CATEGORIA_REP_PERIODO.Q_VENTAS IS 'numero de ventas acumuladas por el representante';

COMMENT ON COLUMN  CATEGORIA_REP_PERIODO.V_COMISION_TOTAL IS 'Valor de la comisión total teniendo en cuenta la categoría de un representante en un determinado periodo de tiempo';

COMMENT ON COLUMN  CLIENTE.K_TIPOID IS 'Tipo de identificacion (CC,CE,PA,NI,OT)';

COMMENT ON COLUMN  CLIENTE.K_IDENTIFICACION IS 'Identificación del cliente';

COMMENT ON COLUMN  CLIENTE.N_CIUDAD IS 'Ciudad del cliente';

COMMENT ON TABLE  INVENTARIO IS 'tabla de rompimiento entre region y producto'
;


COMMENT ON COLUMN  INVENTARIO.K_PAIS IS 'codigo del pais';

COMMENT ON COLUMN  INVENTARIO.K_REGION IS 'codigo de la región';

COMMENT ON COLUMN  INVENTARIO.K_PRODUCTO IS 'código del producto';

COMMENT ON COLUMN  INVENTARIO.Q_ENEXISTENCIA IS 'número de productos en existencia';

COMMENT ON COLUMN  INVENTARIO.V_PRECIO_UNIDAD IS 'valor del producto para su respectivo país-región';

COMMENT ON COLUMN  ITEM.K_PEDIDO IS 'codigo de la orden';

COMMENT ON COLUMN  ITEM.K_ITEM IS 'consecutivo para cada item';

COMMENT ON COLUMN  ITEM.Q_CANTIDAD IS 'cantidad del item solicitado';

COMMENT ON COLUMN  ITEM.V_PRECIO IS 'precio calculado según la cantidad del item';

COMMENT ON COLUMN  ITEM.K_PAIS IS 'codigo del pais';

COMMENT ON COLUMN  ITEM.K_REGION IS 'codigo de la region';

COMMENT ON COLUMN  ITEM.K_PRODUCTO IS 'codigo del producto';

COMMENT ON TABLE  PAGO_PEDIDO IS 'Tabla donde se guardará los datos del pago para una factura'
;


COMMENT ON COLUMN  PAGO_PEDIDO.K_PEDIDO IS 'llave primaria del pago del pedido';

COMMENT ON COLUMN  PAGO_PEDIDO.K_PAGO_PEDIDO IS 'hace parte de la clave primaria, es el numero de pago que se realiza para cierto pedido';

COMMENT ON COLUMN  PAGO_PEDIDO.K_TIPOPAGO IS 'codigo del tipo de pago';

COMMENT ON COLUMN  PAGO_PEDIDO.F_PAGO IS 'fecha en la que se realiza el pago';

COMMENT ON COLUMN  PAGO_PEDIDO.V_PAGO IS 'valor del pago total';

COMMENT ON COLUMN  PAGO_PEDIDO.I_ESTADO IS 'estado del pago: autorizado (AUT) ,cancelado (CAN), fallado (FAI), rechazado (REJ), enviado (ENV)';

COMMENT ON TABLE  PAIS IS 'Tabla donde se guardarán los países que se requieran'
;


COMMENT ON COLUMN  PAIS.K_PAIS IS 'llave primaria del país, se refiere al código numérico del país';

COMMENT ON COLUMN  PAIS.N_NOMBRE_PAIS IS 'Nombre del país que se referencia';

COMMENT ON TABLE  PEDIDO IS 'Se almacenarán los pedidos realizados'
;


COMMENT ON COLUMN  PEDIDO.K_PEDIDO IS 'identificador del pedido';

COMMENT ON COLUMN  PEDIDO.F_PEDIDO IS 'fecha de la realización del pedido';

COMMENT ON COLUMN  PEDIDO.F_LLEGADA IS 'fecha de la llegada del pedido';

COMMENT ON COLUMN  PEDIDO.I_ESTADO IS 'estado del pedido, el cual puede ser: generado(GEN), pagado(PAG), entregado(ENT), cancelado(CAN), devuelto(DEV)';

COMMENT ON COLUMN  PEDIDO.Q_VALORT IS 'valor total del pedido';

CREATE SEQUENCE SEQ_PEDIDO_K_PEDIDO 
	INCREMENT BY 1 
	START WITH 1 
	NOMAXVALUE 
	MINVALUE  1 
	NOCYCLE 
	NOCACHE 
	NOORDER
;


CREATE OR REPLACE TRIGGER TRG_PEDIDO_K_PEDIDO 
	BEFORE INSERT 
	ON PEDIDO 
	FOR EACH ROW 
	BEGIN 
		SELECT SEQ_PEDIDO_K_PEDIDO.NEXTVAL 
		INTO :NEW.K_PEDIDO 
		FROM DUAL; 
	END;

/


COMMENT ON TABLE  PRODUCTO IS 'tabla donde se almacenarán los productos'
;


COMMENT ON COLUMN  PRODUCTO.K_PRODUCTO IS 'Codigo del producto';

COMMENT ON COLUMN  PRODUCTO.N_NOMPRODUCTO IS 'nombre del producto';

COMMENT ON COLUMN  PRODUCTO.N_DESCPRODUCTO IS 'descripción del producto';

COMMENT ON TABLE  REGION IS 'Table en donde se guardará la Region de un país específico'
;


COMMENT ON COLUMN  REGION.K_PAIS IS 'Código del país que hace hace parte de la Llave primaria de la región.';

COMMENT ON COLUMN  REGION.K_REGION IS 'código de la region, hace parte de la llave primaria compuesta';

COMMENT ON COLUMN  REGION.N_NOMBRE_REGION IS 'Nombre de la región en cuestión';

COMMENT ON COLUMN  REGION.K_TIPOID_DIRECTOR IS 'El tipo de Identificación de la persona que está a cargo de la región (hace parte de la llave foránea del Representante)';

COMMENT ON COLUMN  REGION.K_IDENTIFICACION_DIRECTOR IS 'Identificación de la persona que está a cargo de la región (hace parte de la llave foránea del Representante)';

COMMENT ON TABLE  REPRESENTANTE IS 'tabla donde se guardaran los representantes'
;


COMMENT ON COLUMN  REPRESENTANTE.K_TIPOID IS 'El tipo de Identificación del representante (hace parte de la llave primaria compuesta del Representante)';

COMMENT ON COLUMN  REPRESENTANTE.K_IDENTIFICACION IS 'Identificación del representante (hace parte de la llave primaria compuesta del Representante)';

COMMENT ON COLUMN  REPRESENTANTE.I_GENERO IS 'Genero del representante dado por 2 letras, M, F o NA';

COMMENT ON COLUMN  REPRESENTANTE.F_NACIMIENTO IS 'Fecha de nacimiento del Representante';

COMMENT ON COLUMN  REPRESENTANTE.F_CONTRATO IS 'Fecha de la firma del contrato del Representante';

COMMENT ON COLUMN  REPRESENTANTE.K_PAIS IS 'Código del país en la que el representante ejerce su función, hace parte de la Llave primaria de la región.';

COMMENT ON COLUMN  REPRESENTANTE.K_REGION IS 'Código de la región en la que el representante ejerce su función';

COMMENT ON COLUMN  REPRESENTANTE.Q_CALIFICACION IS 'Calificación del representante';

COMMENT ON COLUMN  REPRESENTANTE.I_ESTADO IS 'estado del representante, puede ser: Activo(A), Inactivo(I), Suspendido(S).';

COMMENT ON TABLE  REPRESENTANTE_CLIENTE IS 'tabla de rompimiento entre cliente y representante'
;


COMMENT ON COLUMN  REPRESENTANTE_CLIENTE.K_CLIENTEREP IS 'Codigo interno de la correspondencia entre cliente y representante';

COMMENT ON COLUMN  REPRESENTANTE_CLIENTE.F_INICIO_REP IS 'fecha en la que se agrega el representante a un cliente';

COMMENT ON COLUMN  REPRESENTANTE_CLIENTE.F_FIN_REP IS 'fecha en la que se deja de ser representante de un cliente';

COMMENT ON COLUMN  REPRESENTANTE_CLIENTE.K_TIPOID_CLI IS 'Tipo de identificacion del cliente (CC,CE,PA,NI,OT)';

COMMENT ON COLUMN  REPRESENTANTE_CLIENTE.K_IDENTIFICACION_CLI IS 'identificación del cliente';

COMMENT ON COLUMN  REPRESENTANTE_CLIENTE.K_TIPOID_REP IS 'Tipo de identificacion del representante(CC,CE,PA,NI,OT)';

COMMENT ON COLUMN  REPRESENTANTE_CLIENTE.K_IDENTIFICACION_REP IS 'identificacion del representante';

COMMENT ON TABLE  TIPO_DE_PAGO IS 'Se almacenarán los tipos de pago '
;


COMMENT ON COLUMN  TIPO_DE_PAGO.K_TIPOPAGO IS 'Consecutivo de cada tipo de pago';

COMMENT ON COLUMN  TIPO_DE_PAGO.N_DESCRIPCION IS 'descirpción del tipo de pago';

COMMENT ON TABLE  USUARIO IS 'Tabla donde se almacenarán los usuarios'
;


COMMENT ON COLUMN  USUARIO.K_TIPOID IS 'Tipo de identificacion (CC,CE,PA,NI,OT)';

COMMENT ON COLUMN  USUARIO.K_IDENTIFICACION IS 'Numero de identificacion del cliente';

COMMENT ON COLUMN  USUARIO.N_NOMBRE IS 'Nombres del cliente';

COMMENT ON COLUMN  USUARIO.N_APELLIDO IS 'Apellidos del clente';

COMMENT ON COLUMN  USUARIO.N_CORREOE IS 'Correo electrónico del cliente';

COMMENT ON COLUMN  USUARIO.N_DIRECCION IS 'Direccion del cliente';

COMMENT ON COLUMN  USUARIO.Q_TELEFONO IS 'Telefono de contacto del cliente';

COMMENT ON COLUMN  USUARIO.N_USUARIO IS 'usuario con el que ingresa el cliente a la aplicación';

/* Create Primary Keys, Indexes, Uniques, Checks, Triggers */

ALTER TABLE  Calificacion_pedido 
 ADD CONSTRAINT PK_Calificacion_01
	PRIMARY KEY (K_PEDIDO,K_CALIFICACION) 
 USING INDEX
;

ALTER TABLE  Calificacion_pedido 
 ADD CONSTRAINT CK_QCALIFICACION CHECK (Q_CALIFICACION>0 AND Q_CALIFICACION<5)
;

CREATE INDEX IXFK_Calificacion_pedido_01   
 ON  Calificacion_pedido (K_PEDIDO) 
;

ALTER TABLE  CATEGORIA 
 ADD CONSTRAINT PK_Categoria
	PRIMARY KEY (K_CATEGORIA) 
 USING INDEX
;

CREATE INDEX IXFK_Categoria_Categoria   
 ON  CATEGORIA (K_CATEGORIA_PERTENECE) 
;

ALTER TABLE  CATEGORIA_REP 
 ADD CONSTRAINT PK_CATEGORIA_REP
	PRIMARY KEY (K_CATEGORIA) 
 USING INDEX
;

ALTER TABLE  CATEGORIA_REP 
 ADD CONSTRAINT CK_Q_VENTAS_MIN CHECK (Q_VENTAS_MIN>=0)
;

ALTER TABLE  CATEGORIA_REP 
 ADD CONSTRAINT CK_Q_CALIFICACION_MIN CHECK (Q_CALIFICACION_MIN>=0)
;

ALTER TABLE  CATEGORIA_REP 
 ADD CONSTRAINT CK_V_COMISION CHECK (V_COMISION>0 AND V_COMISION<100)
;

ALTER TABLE  CATEGORIA_REP_PERIODO 
 ADD CONSTRAINT PK_CATEGORIA_REP_PER
	PRIMARY KEY (K_CATEGORIA_REP) 
 USING INDEX
;

ALTER TABLE  CATEGORIA_REP_PERIODO 
 ADD CONSTRAINT CK_PROM_CAL CHECK (Q_PROM_CALIFICACION>0 AND Q_PROM_CALIFICACION<5)
;

ALTER TABLE  CATEGORIA_REP_PERIODO 
 ADD CONSTRAINT CK_QVENTAS CHECK (Q_VENTAS>0)
;

ALTER TABLE  CATEGORIA_REP_PERIODO 
 ADD CONSTRAINT CK_V_COMT CHECK (V_COMISION_TOTAL>0)
;

CREATE INDEX IXFK_Categoria_Re_Represe02   
 ON  CATEGORIA_REP_PERIODO (K_TIPOID_REP,K_IDENTIFICACION_REP) 
;

CREATE INDEX IXFK_Categoria_Repr_Categ01   
 ON  CATEGORIA_REP_PERIODO (K_CATEGORIA) 
;

ALTER TABLE  CLIENTE 
 ADD CONSTRAINT PK_Cliente
	PRIMARY KEY (K_TIPOID,K_IDENTIFICACION) 
 USING INDEX
;

ALTER TABLE  CLIENTE 
 ADD CONSTRAINT CK_TIPOID_CLI CHECK (K_TIPOID IN ('CC','CE','PA','NI','OT'))
;

CREATE INDEX IXFK_CLIENTE_USUARIO2   
 ON  CLIENTE (K_TIPOID,K_IDENTIFICACION) 
;

ALTER TABLE  INVENTARIO 
 ADD CONSTRAINT PK_Inventario
	PRIMARY KEY (K_PAIS,K_REGION,K_PRODUCTO) 
 USING INDEX
;

ALTER TABLE  INVENTARIO 
 ADD CONSTRAINT CK_PRECIO_POSITIVO CHECK (V_PRECIO_UNIDAD>0)
;

CREATE INDEX IXFK_Inventario_Producto   
 ON  INVENTARIO (K_PRODUCTO) 
;

CREATE INDEX IXFK_Inventario_Region   
 ON  INVENTARIO (K_PAIS,K_REGION) 
;

ALTER TABLE  ITEM 
 ADD CONSTRAINT PK_Item
	PRIMARY KEY (K_ITEM,K_PEDIDO) 
 USING INDEX
;

CREATE INDEX IXFK_Item_Inventario   
 ON  ITEM (K_PAIS,K_REGION,K_PRODUCTO) 
;

CREATE INDEX IXFK_Item_Orden   
 ON  ITEM (K_PEDIDO) 
;

ALTER TABLE  PAGO_PEDIDO 
 ADD CONSTRAINT PK_PAGO_PEDIDO
	PRIMARY KEY (K_PEDIDO,K_PAGO_PEDIDO) 
 USING INDEX
;

ALTER TABLE  PAGO_PEDIDO 
 ADD CONSTRAINT CK_I_ESTADO_PAGO CHECK (I_ESTADO IN ('AUT','CAN','FAI','REJ','ENV'))
;

CREATE INDEX IXFK_PAGO_PEDIDO_PEDIDO   
 ON  PAGO_PEDIDO (K_PEDIDO) 
;

CREATE INDEX IXFK_PAGO_PEDIDO_TIPO   
 ON  PAGO_PEDIDO (K_TIPOPAGO) 
;

ALTER TABLE  PAIS 
 ADD CONSTRAINT PK_Pais
	PRIMARY KEY (K_PAIS) 
 USING INDEX
;

ALTER TABLE  PAIS 
 ADD CONSTRAINT UQ_N_NOMBRE_PAIS UNIQUE (N_NOMBRE_PAIS) 
 USING INDEX
;

ALTER TABLE  PEDIDO 
 ADD CONSTRAINT PK_PEDIDO
	PRIMARY KEY (K_PEDIDO) 
 USING INDEX
;

ALTER TABLE  PEDIDO 
 ADD CONSTRAINT CK_TIPOID_PED CHECK (K_TIPOID IN ('CC','CE','PA','NI','OT'))
;

ALTER TABLE  PEDIDO 
 ADD CONSTRAINT CK_I_ESTADO_PED CHECK (I_ESTADO IN ('GEN','PAG','ENT','CAN','DEV'))
;

CREATE INDEX IXFK_PEDIDO_CLIENTE   
 ON  PEDIDO (K_TIPOID,K_IDENTIFICACION) 
;

ALTER TABLE  PRODUCTO 
 ADD CONSTRAINT PK_Producto
	PRIMARY KEY (K_PRODUCTO) 
 USING INDEX
;

CREATE INDEX IXFK_PRODUCTO_CATEGOR02   
 ON  PRODUCTO (K_CATEGORIA) 
;

ALTER TABLE  REGION 
 ADD CONSTRAINT PK_Region
	PRIMARY KEY (K_PAIS,K_REGION) 
 USING INDEX
;

ALTER TABLE  REGION 
 ADD CONSTRAINT UQ_N_NOMBRE_REGION UNIQUE (N_NOMBRE_REGION) 
 USING INDEX
;

ALTER TABLE  REGION 
 ADD CONSTRAINT CK_TIPOID_DIR CHECK (K_TIPOID_DIRECTOR IN ('CC','CE','PA','NI','OT'))
;

CREATE INDEX IXFK_Region_Pais   
 ON  REGION (K_PAIS) 
;

CREATE INDEX IXFK_Region_Representante   
 ON  REGION (K_TIPOID_DIRECTOR,K_IDENTIFICACION_DIRECTOR) 
;

ALTER TABLE  REPRESENTANTE 
 ADD CONSTRAINT PK_Representante
	PRIMARY KEY (K_TIPOID,K_IDENTIFICACION) 
 USING INDEX
;

ALTER TABLE  REPRESENTANTE 
 ADD CONSTRAINT CK_Q_POSITIVA CHECK (Q_CALIFICACION>=0)
;

ALTER TABLE  REPRESENTANTE 
 ADD CONSTRAINT CK_TIPOID_REP CHECK (K_TIPOID IN ('CC','CE','PA','NI','OT'))
;

ALTER TABLE  REPRESENTANTE 
 ADD CONSTRAINT CK_I_ESTADO CHECK (I_ESTADO IN ('A','I','S'))
;

CREATE INDEX IXFK_Representante_Region   
 ON  REPRESENTANTE (K_PAIS,K_REGION) 
;

CREATE INDEX IXFK_REPRESENTANTE_REPRES01   
 ON  REPRESENTANTE (K_TIPOID_SUP,K_IDENTIFICACION_SUP) 
;

CREATE INDEX IXFK_REPRESENTANTE_USUARIO2   
 ON  REPRESENTANTE (K_TIPOID,K_IDENTIFICACION) 
;

ALTER TABLE  REPRESENTANTE_CLIENTE 
 ADD CONSTRAINT PK_Representant_01
	PRIMARY KEY (K_CLIENTEREP) 
 USING INDEX
;

ALTER TABLE  REPRESENTANTE_CLIENTE 
 ADD CONSTRAINT CK_TIPOID_CLIR CHECK (K_TIPOID_CLI IN ('CC','CE','PA','NI','OT'))
;

ALTER TABLE  REPRESENTANTE_CLIENTE 
 ADD CONSTRAINT CK_TIPOID_REPC CHECK (K_TIPOID_REP IN ('CC','CE','PA','NI','OT'))
;

CREATE INDEX IXFK_Representant_Represe01   
 ON  REPRESENTANTE_CLIENTE (K_TIPOID_REP,K_IDENTIFICACION_REP) 
;

CREATE INDEX IXFK_Representante_Cl_Cli01   
 ON  REPRESENTANTE_CLIENTE (K_TIPOID_CLI,K_IDENTIFICACION_CLI) 
;

ALTER TABLE  TIPO_DE_PAGO 
 ADD CONSTRAINT PK_Tipo_de_Pago
	PRIMARY KEY (K_TIPOPAGO) 
 USING INDEX
;

ALTER TABLE  TIPO_DE_PAGO 
 ADD CONSTRAINT UQ_N_DESCRIPCION UNIQUE (N_DESCRIPCION) 
 USING INDEX
;

ALTER TABLE  USUARIO 
 ADD CONSTRAINT PK_usuario
	PRIMARY KEY (K_TIPOID,K_IDENTIFICACION) 
 USING INDEX
;

ALTER TABLE  USUARIO 
 ADD CONSTRAINT UQ_NUSUARIO UNIQUE (N_USUARIO) 
 USING INDEX
;

ALTER TABLE  USUARIO 
 ADD CONSTRAINT CK_TIPOID CHECK (K_TIPOID IN ('CC','CE','PA','NI','OT'))
;

/* Create Foreign Key Constraints */

ALTER TABLE  Calificacion_pedido 
 ADD CONSTRAINT FK_Calificacion_pedido_PEDIDO
	FOREIGN KEY (K_PEDIDO) REFERENCES  PEDIDO (K_PEDIDO)
;

ALTER TABLE  CATEGORIA 
 ADD CONSTRAINT FK_Categoria_Categoria
	FOREIGN KEY (K_CATEGORIA_PERTENECE) REFERENCES  CATEGORIA (K_CATEGORIA)
;

ALTER TABLE  CATEGORIA_REP_PERIODO 
 ADD CONSTRAINT FK_Categoria_Re_Representan_01
	FOREIGN KEY (K_TIPOID_REP,K_IDENTIFICACION_REP) REFERENCES  REPRESENTANTE (K_TIPOID,K_IDENTIFICACION)
;

ALTER TABLE  CATEGORIA_REP_PERIODO 
 ADD CONSTRAINT FK_Categoria_Repr_Categoria_01
	FOREIGN KEY (K_CATEGORIA) REFERENCES  CATEGORIA_REP (K_CATEGORIA)
;

ALTER TABLE  CLIENTE 
 ADD CONSTRAINT FK_Cliente_usuario
	FOREIGN KEY (K_TIPOID,K_IDENTIFICACION) REFERENCES  USUARIO (K_TIPOID,K_IDENTIFICACION)
;

ALTER TABLE  INVENTARIO 
 ADD CONSTRAINT FK_Inventario_Producto
	FOREIGN KEY (K_PRODUCTO) REFERENCES  PRODUCTO (K_PRODUCTO)
;

ALTER TABLE  INVENTARIO 
 ADD CONSTRAINT FK_Inventario_Region
	FOREIGN KEY (K_PAIS,K_REGION) REFERENCES  REGION (K_PAIS,K_REGION)
;

ALTER TABLE  ITEM 
 ADD CONSTRAINT FK_Item_Orden
	FOREIGN KEY (K_PEDIDO) REFERENCES  PEDIDO (K_PEDIDO)
;

ALTER TABLE  PAGO_PEDIDO 
 ADD CONSTRAINT FK_PAGO_PEDIDO_PEDIDO
	FOREIGN KEY (K_PEDIDO) REFERENCES  PEDIDO (K_PEDIDO)
;

ALTER TABLE  PAGO_PEDIDO 
 ADD CONSTRAINT FK_PAGO_PEDIDO_TIPO_DE_PAGO
	FOREIGN KEY (K_TIPOPAGO) REFERENCES  TIPO_DE_PAGO (K_TIPOPAGO)
;

ALTER TABLE  PEDIDO 
 ADD CONSTRAINT FK_PEDIDO_CLIENTE
	FOREIGN KEY (K_TIPOID,K_IDENTIFICACION) REFERENCES  CLIENTE (K_TIPOID,K_IDENTIFICACION)
;

ALTER TABLE  PRODUCTO 
 ADD CONSTRAINT FK_PRODUCTO_CATEGORIA
	FOREIGN KEY (K_CATEGORIA) REFERENCES  CATEGORIA (K_CATEGORIA)
;

ALTER TABLE  REGION 
 ADD CONSTRAINT Director
	FOREIGN KEY (K_TIPOID_DIRECTOR,K_IDENTIFICACION_DIRECTOR) REFERENCES  REPRESENTANTE (K_TIPOID,K_IDENTIFICACION)
;

ALTER TABLE  REGION 
 ADD CONSTRAINT FK_Region_Pais
	FOREIGN KEY (K_PAIS) REFERENCES  PAIS (K_PAIS)
;

ALTER TABLE  REPRESENTANTE 
 ADD CONSTRAINT FK_Representante_Region
	FOREIGN KEY (K_PAIS,K_REGION) REFERENCES  REGION (K_PAIS,K_REGION)
;

ALTER TABLE  REPRESENTANTE 
 ADD CONSTRAINT FK_REPRESENTANTE_REPRESENTANTE
	FOREIGN KEY (K_TIPOID_SUP,K_IDENTIFICACION_SUP) REFERENCES  REPRESENTANTE (K_TIPOID,K_IDENTIFICACION)
;

ALTER TABLE  REPRESENTANTE 
 ADD CONSTRAINT FK_Representante_usuario
	FOREIGN KEY (K_TIPOID,K_IDENTIFICACION) REFERENCES  USUARIO (K_TIPOID,K_IDENTIFICACION)
;

ALTER TABLE  REPRESENTANTE_CLIENTE 
 ADD CONSTRAINT FK_Representant_Representan_01
	FOREIGN KEY (K_TIPOID_REP,K_IDENTIFICACION_REP) REFERENCES  REPRESENTANTE (K_TIPOID,K_IDENTIFICACION)
;

ALTER TABLE  REPRESENTANTE_CLIENTE 
 ADD CONSTRAINT FK_Representante_Cl_Cliente_01
	FOREIGN KEY (K_TIPOID_CLI,K_IDENTIFICACION_CLI) REFERENCES  CLIENTE (K_TIPOID,K_IDENTIFICACION)
;
